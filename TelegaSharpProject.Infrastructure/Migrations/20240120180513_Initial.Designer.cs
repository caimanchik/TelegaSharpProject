// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TelegaSharpProject.Infrastructure.Data;

#nullable disable

namespace TelegaSharpProject.Infrastructure.Migrations
{
    [DbContext(typeof(TelegaSharpProjectContext))]
    [Migration("20240120180513_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.22")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("TelegaSharpProject.Infrastructure.Models.Comment", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("ByUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("MessageTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("message_time");

                    b.Property<long>("TaskID")
                        .HasColumnType("bigint")
                        .HasColumnName("task_id");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("text");

                    b.HasKey("Id");

                    b.HasIndex("ByUserId");

                    b.ToTable("comments");
                });

            modelBuilder.Entity("TelegaSharpProject.Infrastructure.Models.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int>("Points")
                        .HasColumnType("integer")
                        .HasColumnName("points");

                    b.Property<DateTime>("RegisteredAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("registered_at");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("user_name");

                    b.HasKey("Id");

                    b.ToTable("users");
                });

            modelBuilder.Entity("TelegaSharpProject.Infrastructure.Models.Work", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<bool>("Done")
                        .HasColumnType("boolean")
                        .HasColumnName("done");

                    b.Property<DateTime>("MentorEnd")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("mentor_end");

                    b.Property<double>("Price")
                        .HasColumnType("double precision")
                        .HasColumnName("price");

                    b.Property<string>("Task")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("task");

                    b.Property<DateTime>("TopicStart")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("topic_start");

                    b.Property<long>("TopicasterId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("TopicasterId");

                    b.ToTable("works");
                });

            modelBuilder.Entity("TelegaSharpProject.Infrastructure.Models.Comment", b =>
                {
                    b.HasOne("TelegaSharpProject.Infrastructure.Models.User", "ByUser")
                        .WithMany()
                        .HasForeignKey("ByUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ByUser");
                });

            modelBuilder.Entity("TelegaSharpProject.Infrastructure.Models.Work", b =>
                {
                    b.HasOne("TelegaSharpProject.Infrastructure.Models.User", "Topicaster")
                        .WithMany()
                        .HasForeignKey("TopicasterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Topicaster");
                });
#pragma warning restore 612, 618
        }
    }
}
